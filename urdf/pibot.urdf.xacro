<?xml version='1.0'?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="pibot">
  <!-- Materials -->
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0" />
  </material>
  <material name="black">
    <color rgba="0.2 0.2 0.2 1.0" />
  </material>
  <material name="white">
    <color rgba="0.9 0.9 0.9 1.0" />
  </material>
  <material name="transparent-blue">
    <color rgba="0.0 0.0 0.5 0.3" />
  </material>
  <material name="toro_red">
    <color rgba="${162/255} ${21/255} ${36/255} 1.0" />
  </material>

  <static>false</static>

  <link name='base_link' />

  <link name='chassis'>
    <!-- <pose>0.0 0.0 0.043 0.0 0.0 0.0</pose> -->
    <inertial>
      <mass value='10.0' />
      <!-- <pose>0.0 -0.01 -0.02 0.0 0.0 0.0</pose> -->
      <inertia
        ixx='1.0'
        ixy='0.0'
        ixz='0.0'
        iyy='1.0'
        iyz='0.0'
        izz='0.1' />
    </inertial>
    <collision name='collision'>
      <!-- <origin xyz='0 0 0.043' rpy='0 0 0'/> -->
      <origin xyz='0 0 0.043' rpy='0 0 0' />
      <geometry>
        <box size="0.01 0.01 0.01" />
        <!-- <mesh -->
        <!--
        filename='/home/kyle/jetbot_ws/src/jetbot_ros/urdf/meshes/JetBot-v3-Chassis_simplified.stl' -->
        <!--   scale='0.001 0.001 0.001'/> -->
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0.0</mu>
            <mu2>0.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>

    <visual name='visual'>
      <origin xyz='0 0 0.043' rpy='1.57 0 1.57' />
      <geometry>
        <mesh
          filename='package://pibot_ros/urdf/meshes/JetBot-v3-Chassis.dae'
          scale='0.001 0.001 0.001' />
      </geometry>
      <material name='black' />
    </visual>
  </link>

  <joint name='base_to_chassis_joint' type='fixed'>
    <origin xyz='0 0 0' rpy='0 0 0' />
    <child link='chassis' />
    <parent link='base_link' />
  </joint>

  <link name='caster'>
    <!-- <pose>-0.05 0 0.0127 0 0 0</pose> -->
    <inertial>
      <mass value='1.0' />
      <inertia
        ixx='0.00001'
        ixy='0.0'
        ixz='0.0'
        iyy='0.00001'
        iyz='0.0'
        izz='0.00001' />
    </inertial>
    <collision name='collision'>
      <origin xyz='-0.05 0 0.0127' rpy='0 0 0' />
      <geometry>
        <sphere radius='0.0127' />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0.0</mu>
            <mu2>0.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
    <visual name='visual'>
      <origin xyz='-0.05 0 0.0127' rpy='0 0 0' />
      <geometry>
        <sphere radius='0.0127' />
      </geometry>
      <material name='black' />
    </visual>
  </link>

  <joint name='caster_joint' type='fixed'>
    <origin xyz='0 0 0' rpy='0 0 0' />
    <parent link='chassis' />
    <child link='caster' />
  </joint>

  <link name="left_wheel">
    <!-- <pose>0.03 0.05125 0.03 0.0 0.0 1.57079632679</pose> -->
    <inertial>
      <mass value='1' />
      <inertia
        ixx='0.00001'
        ixy='0.0'
        ixz='0.0'
        iyy='0.00001'
        iyz='0.0'
        izz='0.00001' />
    </inertial>
    <collision name="collision">
      <origin xyz='0 0 0' rpy='0 0 -1.57' />
      <geometry>
        <mesh
          filename='package://pibot_ros/urdf/meshes/JetBot-v3-Wheel.stl'
          scale='0.001 0.001 0.001' />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>200.0</mu>
            <mu2>100.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
    <visual name="visual">
      <origin xyz='0 0 0' rpy='0 0 -1.57' />
      <geometry>
        <mesh
          filename='package://pibot_ros/urdf/meshes/JetBot-v3-Wheel.stl'
          scale='0.001 0.001 0.001' />
      </geometry>
      <material name='black' />
    </visual>
  </link>

  <joint type="revolute" name="left_wheel_hinge">
    <origin xyz='0.03 0.05125 0.03' rpy='0 0 0' />
    <parent link='chassis' />
    <child link='left_wheel' />
    <axis xyz='0 1 0' />
    <limit lower="-1e10" upper="1e10" effort="100" velocity="1" />
  </joint>

  <link name="right_wheel">
    <inertial>
      <mass value='1' />
      <inertia
        ixx='0.00001'
        ixy='0.0'
        ixz='0.0'
        iyy='0.00001'
        iyz='0.0'
        izz='0.00001' />
    </inertial>
    <collision name="collision">
      <origin xyz='0 0 0' rpy='0 0 1.57' />
      <geometry>
        <mesh
          filename='package://pibot_ros/urdf/meshes/JetBot-v3-Wheel.stl'
          scale='0.001 0.001 0.001' />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>200.0</mu>
            <mu2>100.0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
    <visual name="visual">
      <origin xyz='0 0 0' rpy='0 0 1.57' />
      <geometry>
        <mesh
          filename='package://pibot_ros/urdf/meshes/JetBot-v3-Wheel.stl'
          scale='0.001 0.001 0.001' />
      </geometry>
      <material name='black' />
    </visual>
  </link>

  <joint type="revolute" name="right_wheel_hinge">
    <origin xyz='0.03 -0.05125 0.03' rpy='0 0 0' />
    <parent link='chassis' />
    <child link='right_wheel' />
    <axis xyz='0 1 0' />
    <limit lower="-1e10" upper="1e10" effort="100" velocity="1" />
  </joint>

  <link name='lidar_link'>
    <inertial>
      <mass value='0.1'/>
      <inertia 
        ixx='0.00001'
        ixy='0.0'
        ixz='0.0'
        iyy='0.00001'
        iyz='0.0'
        izz='0.00001'/>
    </inertial>
    <visual name='visual'>
      <origin xyz='0 0 0' rpy='0 0 0'/>
      <geometry>
        <box size='0.001 0.001 0.001'/>
      </geometry>
    </visual>
  </link>

  <gazebo reference='lidar_link'>
    <sensor type="gpu_lidar" name="rplidar">
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <topic>/pibot/scan</topic>
      <gz_frame_id>lidar_link</gz_frame_id>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.05</min>
          <max>10.0</max>
          <resolution>0.03</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gz::sim::systems::Sensors"
        filename="libgz-sim-sensors-system.so">
        <render_engine>ogre2</render_engine>
      </plugin>
    </sensor>
  </gazebo>

  <joint name='lidar_joint' type='fixed'>
    <origin xyz='0 0 0.1' rpy='0 0 0'/>
    <child link='lidar_link'/>
    <parent link='chassis'/>
  </joint>

  <!-- <link name="camera_link"> -->
  <!--   <gravity>false</gravity> -->
  <!--   <inertial> -->
  <!--     <mass value='0.01' /> -->
  <!--     <inertia -->
  <!--       ixx='0.00001' -->
  <!--       ixy='0.0' -->
  <!--       ixz='0.0' -->
  <!--       iyy='0.00001' -->
  <!--       iyz='0.0' -->
  <!--       izz='0.00001' /> -->
  <!--   </inertial> -->
  <!--   <visual name="visual"> -->
  <!--     <geometry> -->
  <!--       <box size='0.001 0.001 0.001' /> -->
  <!--     </geometry> -->
  <!--     <material name='black' /> -->
  <!--   </visual> -->
  <!--   <sensor name="camera" type="camera"> -->
  <!--     <camera> -->
  <!--       <horizontal_fov>2.79253</horizontal_fov> -->
  <!--       <image> -->
  <!--         <width>640</width> -->
  <!--         <height>480</height> -->
  <!--       </image> -->
  <!--       <clip> -->
  <!--         <near>0.01</near> -->
  <!--         <far>1</far> -->
  <!--       </clip> -->
  <!--     </camera> -->
  <!--     <always_on>1</always_on> -->
  <!--     <update_rate>10</update_rate> -->
  <!--     <visualize>true</visualize> -->
  <!--     <topic>/image_raw</topic> -->
  <!--     <gz_frame_id>camera_link</gz_frame_id> -->
      <!-- <plugin name="gz::sim::systems::Sensors" -->
      <!--   filename="libgz-sim-sensors-system.so"> -->
      <!--   <render_engine>ogre2</render_engine> -->
      <!--   <gz_frame_id>camera_link</gz_frame_id> -->
      <!-- </plugin> -->
  <!--   </sensor> -->
  <!-- </link> -->
  <!---->
  <!-- <joint name="camera_joint" type="fixed"> -->
  <!--   <origin xyz='0 0 0' rpy='0 0 0' /> -->
  <!--   <parent link='chassis' /> -->
  <!--   <child link='camera_link' /> -->
  <!-- </joint> -->

  <gazebo>
    <plugin
      filename='libgz-sim-diff-drive-system.so'
      name='gz::sim::systems::DiffDrive'>
      <left_joint>left_wheel_hinge</left_joint>
      <right_joint>right_wheel_hinge</right_joint>
      <!-- <wheel_separation>0.9398</wheel_separation> -->
      <wheel_separation>0.1</wheel_separation>
      <wheel_radius>0.03</wheel_radius>
      <max_linear_acceleration>0.1</max_linear_acceleration>
      <min_linear_acceleration>-0.1</min_linear_acceleration>
      <max_angular_acceleration>0.2</max_angular_acceleration>
      <min_angular_acceleration>-0.2</min_angular_acceleration>
      <odom_publish_frequency>50</odom_publish_frequency>
      <topic>cmd_vel</topic>
      <frame_id>odom</frame_id>
      <child_frame_id>chassis</child_frame_id>
    </plugin>
  </gazebo>

</robot>
